--- a/drivers/staging/fbtft/fb_st7735r.c
+++ b/drivers/staging/fbtft/fb_st7735r.c
@@ -13,8 +13,8 @@
 #include "fbtft.h"
 
 #define DRVNAME "fb_st7735r"
-#define DEFAULT_GAMMA   "0F 1A 0F 18 2F 28 20 22 1F 1B 23 37 00 07 02 10\n" \
-			"0F 1B 0F 17 33 2C 29 2E 30 30 39 3F 00 07 03 10"
+#define DEFAULT_GAMMA   "04 22 07 0A 2E 30 25 2A 28 26 2E 3A 00 01 03 13\n" \
+			"04 16 06 0D 2D 26 23 27 27 25 2D 3B 00 01 04 13"
 
 static const s16 default_init_sequence[] = {
 	-1, MIPI_DCS_SOFT_RESET,
@@ -26,48 +26,48 @@ static const s16 default_init_sequence[]
 	/* FRMCTR1 - frame rate control: normal mode
 	 * frame rate = fosc / (1 x 2 + 40) * (LINE + 2C + 2D)
 	 */
-	-1, 0xB1, 0x01, 0x2C, 0x2D,
+	-1, 0xB1, 0x05, 0x3C, 0x3C,
 
 	/* FRMCTR2 - frame rate control: idle mode
 	 * frame rate = fosc / (1 x 2 + 40) * (LINE + 2C + 2D)
 	 */
-	-1, 0xB2, 0x01, 0x2C, 0x2D,
+	-1, 0xB2, 0x05, 0x3C, 0x3C,
 
 	/* FRMCTR3 - frame rate control - partial mode
 	 * dot inversion mode, line inversion mode
 	 */
-	-1, 0xB3, 0x01, 0x2C, 0x2D, 0x01, 0x2C, 0x2D,
+	-1, 0xB3, 0x05, 0x3C, 0x3C, 0x05, 0x3C, 0x3C,
 
 	/* INVCTR - display inversion control
 	 * no inversion
 	 */
-	-1, 0xB4, 0x07,
+	-1, 0xB4, 0x03,
 
 	/* PWCTR1 - Power Control
 	 * -4.6V, AUTO mode
 	 */
-	-1, 0xC0, 0xA2, 0x02, 0x84,
+	-1, 0xC0, 0x28, 0x08, 0x04,
 
 	/* PWCTR2 - Power Control
 	 * VGH25 = 2.4C VGSEL = -10 VGH = 3 * AVDD
 	 */
-	-1, 0xC1, 0xC5,
+	-1, 0xC1, 0xC0,
 
 	/* PWCTR3 - Power Control
 	 * Opamp current small, Boost frequency
 	 */
-	-1, 0xC2, 0x0A, 0x00,
+	-1, 0xC2, 0x0D, 0x00,
 
 	/* PWCTR4 - Power Control
 	 * BCLK/2, Opamp current small & Medium low
 	 */
-	-1, 0xC3, 0x8A, 0x2A,
+	-1, 0xC3, 0x8D, 0x2A,
 
 	/* PWCTR5 - Power Control */
-	-1, 0xC4, 0x8A, 0xEE,
+	-1, 0xC4, 0x8D, 0xEE,
 
 	/* VMCTR1 - Power Control */
-	-1, 0xC5, 0x0E,
+	-1, 0xC5, 0x1A,
 
 	-1, MIPI_DCS_EXIT_INVERT_MODE,
 
@@ -86,10 +86,10 @@ static const s16 default_init_sequence[]
 static void set_addr_win(struct fbtft_par *par, int xs, int ys, int xe, int ye)
 {
 	write_reg(par, MIPI_DCS_SET_COLUMN_ADDRESS,
-		  xs >> 8, xs & 0xFF, xe >> 8, xe & 0xFF);
+		  (xs+2) >> 8, (xs+2) & 0xFF, (xe+2) >> 8, (xe+2) & 0xFF);
 
 	write_reg(par, MIPI_DCS_SET_PAGE_ADDRESS,
-		  ys >> 8, ys & 0xFF, ye >> 8, ye & 0xFF);
+		  (ys+1) >> 8, (ys+1) & 0xFF, (ye+1) >> 8, (ye+1) & 0xFF);
 
 	write_reg(par, MIPI_DCS_WRITE_MEMORY_START);
 }